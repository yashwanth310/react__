{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\nconst storedLoggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\") || \"null\");\nconst initialState = {\n  user: storedLoggedInUser,\n  // ✅ Restore session on refresh\n  registeredUsers: storedUsers\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    registerUser: (state, action) => {\n      state.registeredUsers.push(action.payload);\n      localStorage.setItem(\"users\", JSON.stringify(state.registeredUsers));\n    },\n    loginUser: (state, action) => {\n      state.user = action.payload;\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(action.payload)); // ✅ Persist login\n    },\n    logoutUser: state => {\n      state.user = null;\n      localStorage.removeItem(\"loggedInUser\"); // ✅ Clear session on logout\n    }\n  }\n});\nexport const {\n  registerUser,\n  loginUser,\n  logoutUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","storedUsers","JSON","parse","localStorage","getItem","storedLoggedInUser","initialState","user","registeredUsers","userSlice","name","reducers","registerUser","state","action","push","payload","setItem","stringify","loginUser","logoutUser","removeItem","actions","reducer"],"sources":["C:/Users/koush/Documents/YASHU/react-assignment/src/redux/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface AuthUser {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface UserState {\r\n  user: AuthUser | null;\r\n  registeredUsers: AuthUser[];\r\n}\r\n\r\nconst storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\nconst storedLoggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\") || \"null\");\r\n\r\nconst initialState: UserState = {\r\n  user: storedLoggedInUser, // ✅ Restore session on refresh\r\n  registeredUsers: storedUsers,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    registerUser: (state, action: PayloadAction<AuthUser>) => {\r\n      state.registeredUsers.push(action.payload);\r\n      localStorage.setItem(\"users\", JSON.stringify(state.registeredUsers));\r\n    },\r\n    loginUser: (state, action: PayloadAction<AuthUser>) => {\r\n      state.user = action.payload;\r\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(action.payload)); // ✅ Persist login\r\n    },\r\n    logoutUser: (state) => {\r\n      state.user = null;\r\n      localStorage.removeItem(\"loggedInUser\"); // ✅ Clear session on logout\r\n    },\r\n  },\r\n});\r\n\r\nexport const { registerUser, loginUser, logoutUser } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAY7D,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;AACrE,MAAMC,kBAAkB,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC;AAErF,MAAME,YAAuB,GAAG;EAC9BC,IAAI,EAAEF,kBAAkB;EAAE;EAC1BG,eAAe,EAAER;AACnB,CAAC;AAED,MAAMS,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAA+B,KAAK;MACxDD,KAAK,CAACL,eAAe,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC1Cb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEhB,IAAI,CAACiB,SAAS,CAACL,KAAK,CAACL,eAAe,CAAC,CAAC;IACtE,CAAC;IACDW,SAAS,EAAEA,CAACN,KAAK,EAAEC,MAA+B,KAAK;MACrDD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACE,OAAO;MAC3Bb,YAAY,CAACc,OAAO,CAAC,cAAc,EAAEhB,IAAI,CAACiB,SAAS,CAACJ,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IACDI,UAAU,EAAGP,KAAK,IAAK;MACrBA,KAAK,CAACN,IAAI,GAAG,IAAI;MACjBJ,YAAY,CAACkB,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;IAC3C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,YAAY;EAAEO,SAAS;EAAEC;AAAW,CAAC,GAAGX,SAAS,CAACa,OAAO;AACxE,eAAeb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}