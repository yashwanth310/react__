{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  userData: []\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n    addUserData: (state, action) => {\n      state.userData.push(action.payload);\n    }\n  }\n});\nexport const {\n  setUser,\n  addUserData\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","userData","userSlice","name","reducers","setUser","state","action","payload","addUserData","push","actions","reducer"],"sources":["C:/Users/koush/Documents/YASHU/react-assignment/src/redux/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface UserState {\r\n  user: any | null;\r\n  userData: Array<{ id: string; name: string; email: string; address: string; phone: string }>;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n  userData: [],\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<any>) => {\r\n      state.user = action.payload;\r\n    },\r\n    addUserData: (state, action: PayloadAction<{ id: string; name: string; email: string; address: string; phone: string }>) => {\r\n      state.userData.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, addUserData } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA0B,KAAK;MAC9CD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAkG,KAAK;MAC1HD,KAAK,CAACL,QAAQ,CAACS,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACrC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,OAAO;EAAEI;AAAY,CAAC,GAAGP,SAAS,CAACS,OAAO;AACzD,eAAeT,SAAS,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}