{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\nconst initialState = {\n  user: null,\n  registeredUsers: storedUsers\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    registerUser: (state, action) => {\n      state.registeredUsers.push(action.payload);\n      localStorage.setItem(\"users\", JSON.stringify(state.registeredUsers));\n    },\n    loginUser: (state, action) => {\n      const foundUser = state.registeredUsers.find(u => u.email === action.payload.email && u.password === action.payload.password);\n      if (foundUser) {\n        state.user = foundUser;\n      } else {\n        alert(\"Invalid email or password\");\n      }\n    },\n    logoutUser: state => {\n      state.user = null;\n    }\n  }\n});\nexport const {\n  registerUser,\n  loginUser,\n  logoutUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","storedUsers","JSON","parse","localStorage","getItem","initialState","user","registeredUsers","userSlice","name","reducers","registerUser","state","action","push","payload","setItem","stringify","loginUser","foundUser","find","u","email","password","alert","logoutUser","actions","reducer"],"sources":["C:/Users/koush/Documents/YASHU/react-assignment/src/redux/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface User {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface UserState {\r\n  user: User | null;\r\n  registeredUsers: User[];\r\n}\r\n\r\nconst storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n  registeredUsers: storedUsers, \r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    registerUser: (state, action: PayloadAction<User>) => {\r\n      state.registeredUsers.push(action.payload);\r\n      localStorage.setItem(\"users\", JSON.stringify(state.registeredUsers));\r\n    },\r\n    loginUser: (state, action: PayloadAction<User>) => {\r\n      const foundUser = state.registeredUsers.find(\r\n        (u) => u.email === action.payload.email && u.password === action.payload.password\r\n      );\r\n\r\n      if (foundUser) {\r\n        state.user = foundUser;\r\n      } else {\r\n        alert(\"Invalid email or password\");\r\n      }\r\n    },\r\n    logoutUser: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { registerUser, loginUser, logoutUser } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAY7D,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;AAErE,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAEP;AACnB,CAAC;AAED,MAAMQ,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAA2B,KAAK;MACpDD,KAAK,CAACL,eAAe,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC1CZ,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEf,IAAI,CAACgB,SAAS,CAACL,KAAK,CAACL,eAAe,CAAC,CAAC;IACtE,CAAC;IACDW,SAAS,EAAEA,CAACN,KAAK,EAAEC,MAA2B,KAAK;MACjD,MAAMM,SAAS,GAAGP,KAAK,CAACL,eAAe,CAACa,IAAI,CACzCC,CAAC,IAAKA,CAAC,CAACC,KAAK,KAAKT,MAAM,CAACE,OAAO,CAACO,KAAK,IAAID,CAAC,CAACE,QAAQ,KAAKV,MAAM,CAACE,OAAO,CAACQ,QAC3E,CAAC;MAED,IAAIJ,SAAS,EAAE;QACbP,KAAK,CAACN,IAAI,GAAGa,SAAS;MACxB,CAAC,MAAM;QACLK,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC;IACDC,UAAU,EAAGb,KAAK,IAAK;MACrBA,KAAK,CAACN,IAAI,GAAG,IAAI;IACnB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,YAAY;EAAEO,SAAS;EAAEO;AAAW,CAAC,GAAGjB,SAAS,CAACkB,OAAO;AACxE,eAAelB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}