{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\nconst storedUserData = JSON.parse(localStorage.getItem(\"userData\") || \"null\");\nconst storedLoggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\") || \"null\");\nconst initialState = {\n  user: storedLoggedInUser,\n  registeredUsers: storedUsers,\n  userData: storedUserData\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    registerUser: (state, action) => {\n      state.registeredUsers.push(action.payload);\n      localStorage.setItem(\"users\", JSON.stringify(state.registeredUsers));\n    },\n    loginUser: (state, action) => {\n      const foundUser = state.registeredUsers.find(u => u.email === action.payload.email && u.password === action.payload.password);\n      if (foundUser) {\n        state.user = foundUser;\n        localStorage.setItem(\"loggedInUser\", JSON.stringify(foundUser));\n      } else {\n        alert(\"Invalid email or password\");\n      }\n    },\n    saveUserData: (state, action) => {\n      state.userData = action.payload;\n      localStorage.setItem(\"userData\", JSON.stringify(action.payload));\n    }\n  }\n});\nexport const {\n  registerUser,\n  loginUser,\n  saveUserData\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","storedUsers","JSON","parse","localStorage","getItem","storedUserData","storedLoggedInUser","initialState","user","registeredUsers","userData","userSlice","name","reducers","registerUser","state","action","push","payload","setItem","stringify","loginUser","foundUser","find","u","email","password","alert","saveUserData","actions","reducer"],"sources":["C:/Users/koush/Documents/YASHU/react-assignment/src/redux/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  address: string;\r\n  phone: string;\r\n}\r\n\r\n\r\ninterface AuthUser {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n\r\ninterface UserState {\r\n  user: AuthUser | null;\r\n  registeredUsers: AuthUser[];\r\n  userData: User | null;\r\n}\r\n\r\n\r\nconst storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\nconst storedUserData = JSON.parse(localStorage.getItem(\"userData\") || \"null\");\r\nconst storedLoggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\") || \"null\");\r\n\r\nconst initialState: UserState = {\r\n  user: storedLoggedInUser,\r\n  registeredUsers: storedUsers,\r\n  userData: storedUserData,\r\n};\r\n\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    registerUser: (state, action: PayloadAction<AuthUser>) => {\r\n      state.registeredUsers.push(action.payload);\r\n      localStorage.setItem(\"users\", JSON.stringify(state.registeredUsers));\r\n    },\r\n    loginUser: (state, action: PayloadAction<AuthUser>) => {\r\n      const foundUser = state.registeredUsers.find(\r\n        (u) => u.email === action.payload.email && u.password === action.payload.password\r\n      );\r\n      if (foundUser) {\r\n        state.user = foundUser;\r\n        localStorage.setItem(\"loggedInUser\", JSON.stringify(foundUser));\r\n      } else {\r\n        alert(\"Invalid email or password\");\r\n      }\r\n    },\r\n   \r\n    saveUserData: (state, action: PayloadAction<User>) => {\r\n      state.userData = action.payload;\r\n      localStorage.setItem(\"userData\", JSON.stringify(action.payload));\r\n    },\r\n  },\r\n});\r\n\r\n\r\nexport const { registerUser, loginUser, saveUserData } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAwB7D,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;AACrE,MAAMC,cAAc,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC;AAC7E,MAAME,kBAAkB,GAAGL,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC;AAErF,MAAMG,YAAuB,GAAG;EAC9BC,IAAI,EAAEF,kBAAkB;EACxBG,eAAe,EAAET,WAAW;EAC5BU,QAAQ,EAAEL;AACZ,CAAC;AAGD,MAAMM,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAA+B,KAAK;MACxDD,KAAK,CAACN,eAAe,CAACQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC1Cf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACmB,SAAS,CAACL,KAAK,CAACN,eAAe,CAAC,CAAC;IACtE,CAAC;IACDY,SAAS,EAAEA,CAACN,KAAK,EAAEC,MAA+B,KAAK;MACrD,MAAMM,SAAS,GAAGP,KAAK,CAACN,eAAe,CAACc,IAAI,CACzCC,CAAC,IAAKA,CAAC,CAACC,KAAK,KAAKT,MAAM,CAACE,OAAO,CAACO,KAAK,IAAID,CAAC,CAACE,QAAQ,KAAKV,MAAM,CAACE,OAAO,CAACQ,QAC3E,CAAC;MACD,IAAIJ,SAAS,EAAE;QACbP,KAAK,CAACP,IAAI,GAAGc,SAAS;QACtBnB,YAAY,CAACgB,OAAO,CAAC,cAAc,EAAElB,IAAI,CAACmB,SAAS,CAACE,SAAS,CAAC,CAAC;MACjE,CAAC,MAAM;QACLK,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC;IAEDC,YAAY,EAAEA,CAACb,KAAK,EAAEC,MAA2B,KAAK;MACpDD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACE,OAAO;MAC/Bf,YAAY,CAACgB,OAAO,CAAC,UAAU,EAAElB,IAAI,CAACmB,SAAS,CAACJ,MAAM,CAACE,OAAO,CAAC,CAAC;IAClE;EACF;AACF,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEJ,YAAY;EAAEO,SAAS;EAAEO;AAAa,CAAC,GAAGjB,SAAS,CAACkB,OAAO;AAC1E,eAAelB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}