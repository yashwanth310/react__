{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koush\\\\Documents\\\\YASHU\\\\react-assignment\\\\src\\\\pages\\\\login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../redux/userSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    if (credentials.email === 'admin@example.com' && credentials.password === 'password') {\n      dispatch(loginUser({\n        email: credentials.email\n      }));\n      navigate('/user-form');\n    } else {\n      alert('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      margin: \"normal\",\n      label: \"Email\",\n      type: \"email\",\n      onChange: e => setCredentials({\n        ...credentials,\n        email: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      margin: \"normal\",\n      label: \"Password\",\n      type: \"password\",\n      onChange: e => setCredentials({\n        ...credentials,\n        password: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"YmZ14ORR6qTxZOZd4Xc2A9uOTh8=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","useDispatch","loginUser","useNavigate","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","email","password","dispatch","navigate","handleLogin","alert","maxWidth","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","label","type","onChange","e","target","value","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/koush/Documents/YASHU/react-assignment/src/pages/login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Container, Typography } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../redux/userSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login: React.FC = () => {\r\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    if (credentials.email === 'admin@example.com' && credentials.password === 'password') {\r\n      dispatch(loginUser({ email: credentials.email }));\r\n      navigate('/user-form');\r\n    } else {\r\n      alert('Invalid email or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Typography variant=\"h4\">Login</Typography>\r\n      <TextField fullWidth margin=\"normal\" label=\"Email\" type=\"email\" onChange={(e) => setCredentials({ ...credentials, email: e.target.value })} />\r\n      <TextField fullWidth margin=\"normal\" label=\"Password\" type=\"password\" onChange={(e) => setCredentials({ ...credentials, password: e.target.value })} />\r\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin}>Login</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACxE,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC;IAAEc,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC3E,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIN,WAAW,CAACE,KAAK,KAAK,mBAAmB,IAAIF,WAAW,CAACG,QAAQ,KAAK,UAAU,EAAE;MACpFC,QAAQ,CAACV,SAAS,CAAC;QAAEQ,KAAK,EAAEF,WAAW,CAACE;MAAM,CAAC,CAAC,CAAC;MACjDG,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,MAAM;MACLE,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,oBACEV,OAAA,CAACN,SAAS;IAACiB,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtBZ,OAAA,CAACL,UAAU;MAACkB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC3CjB,OAAA,CAACR,SAAS;MAAC0B,SAAS;MAACC,MAAM,EAAC,QAAQ;MAACC,KAAK,EAAC,OAAO;MAACC,IAAI,EAAC,OAAO;MAACC,QAAQ,EAAGC,CAAC,IAAKnB,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEE,KAAK,EAAEkB,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9IjB,OAAA,CAACR,SAAS;MAAC0B,SAAS;MAACC,MAAM,EAAC,QAAQ;MAACC,KAAK,EAAC,UAAU;MAACC,IAAI,EAAC,UAAU;MAACC,QAAQ,EAAGC,CAAC,IAAKnB,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEG,QAAQ,EAAEiB,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvJjB,OAAA,CAACP,MAAM;MAACoB,OAAO,EAAC,WAAW;MAACa,KAAK,EAAC,SAAS;MAACR,SAAS;MAACS,OAAO,EAAElB,WAAY;MAAAG,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEhB,CAAC;AAACf,EAAA,CAtBID,KAAe;EAAA,QAEFL,WAAW,EACXE,WAAW;AAAA;AAAA8B,EAAA,GAHxB3B,KAAe;AAwBrB,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}